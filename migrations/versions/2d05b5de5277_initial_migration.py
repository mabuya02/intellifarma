"""initial migration

Revision ID: 2d05b5de5277
Revises: 
Create Date: 2023-11-16 10:26:38.766145

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2d05b5de5277'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('First_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('contact_number', sa.String(length=20), nullable=True),
    sa.Column('farm_location', sa.String(length=255), nullable=True),
    sa.Column('registration_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.Enum('Active', 'Inactive'), server_default='Active', nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('login_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('soil_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('nitrogen_level', sa.Float(), nullable=True),
    sa.Column('phosphorus_level', sa.Float(), nullable=True),
    sa.Column('potassium_level', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('ph_level', sa.Float(), nullable=True),
    sa.Column('rainfall', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crop_prediction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parameter_id', sa.Integer(), nullable=True),
    sa.Column('predicted_crop_name', sa.String(length=50), nullable=True),
    sa.Column('prediction_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parameter_id'], ['soil_parameters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crop_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('crop_image', sa.String(length=255), nullable=True),
    sa.Column('prediction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['crop_prediction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('prediction_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('review_text', sa.Text(), nullable=True),
    sa.Column('review_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['crop_prediction.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('review')
    op.drop_table('crop_details')
    op.drop_table('crop_prediction')
    op.drop_table('soil_parameters')
    op.drop_table('session')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
