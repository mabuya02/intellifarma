from flask import Blueprint, request
from flask_restful import Api, Resource, marshal_with, fields
from app.models import Role, User
from app import db
from werkzeug.security import generate_password_hash

main = Blueprint('main', __name__)
api = Api(main)

user_fields = {
    'id': fields.Integer,
    'First_name': fields.String,
    'last_name': fields.String,
    'password': fields.String,
    'email': fields.String,
    'role_id': fields.Integer,
    'contact_number': fields.String,
    'farm_location': fields.String,
    'status': fields.String,
}

class RegisterUser(Resource):
    @marshal_with(user_fields)
    def post(self):
        data = request.json

        role_id = 2  # Default role ID
        role = Role.query.get(role_id)
        hashed_password = generate_password_hash(data.get('password'))

        if not role:
            return {'message': 'Role does not exist'}, 400

        new_user = User(
            First_name=data.get('First_name'),
            last_name=data.get('last_name'),
            password=hashed_password,
            email=data.get('email'),
            role=role,
            role_id=role_id,
            contact_number=data.get('contact_number'),
            farm_location=data.get('farm_location'),
            status=data.get('status', 'Active')
        )

        try:
            db.session.add(new_user)
            db.session.commit()
            return new_user, 201
        except Exception as e:
            db.session.rollback()
            return {'message': f'Failed to register user: {str(e)}'}, 500

main.add_url_rule('/register', view_func=RegisterUser.as_view('register_user'))
